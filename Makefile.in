# @configure_input@

CP              := cp -f
RM              := rm -f
RMDIR           := rm -rf
MKDIR           := mkdir -p

CC              :=  gcc
CFLAGS          := -std=gnu18 -Wall -Wextra -O3 -march=native
CPPFLAGS        := -I./include -D_GNU_SOURCE
LDFLAGS         := -Wl,-O -Wl,--strip-all -Wl,--reduce-memory-overheads -Wl,--relax
TARGET_ARCH     := -Wl,--format=elf64-x86-64
LOADLIBES       := 
LDLIBS          := 

PACKAGE         := @PACKAGE_NAME@
VERSION         := @PACKAGE_VERSION@
TARNAME         := @PACKAGE_TARNAME@
DISTDIR         := $(strip $(TARNAME))-$(strip $(VERSION))

vpath %.c src

SRCS            := $(notdir $(wildcard src/*.c))
OBJS            := $(patsubst %.c,%.o,$(SRCS))

TARGET          := $(PACKAGE)

all: $(TARGET)

$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $(TARGET_ARCH) $^ $(LOADLIBES) $(LDLIBS) -o $@

%.o: %.c
	$(CC) $(CFLAGS) $(CPPFLAGS) $(TARGET_ARCH) -c -o $@ $<

dist: $(DISTDIR).tar.gz

$(DISTDIR).tar.gz: $(DISTDIR)
	tar chof - $(DISTDIR) | gzip -9 -c > $@
	$(RMDIR) $(DISTDIR)

$(DISTDIR): $(SRCS)
	$(MKDIR) $(DISTDIR)/src $(DISTDIR)/include
	$(CP) Makefile $(DISTDIR)
	$(CP) $(wildcard src/*.c) $(DISTDIR)/src
	$(CP) $(wildcard include/*.h) $(DISTDIR)/include

install: $(TARGET)
	@echo "This target has not been implemented yet, sorry!"

.PHONY: clean
clean:
	$(RM) $(OBJS) $(TARGET)

# Remove files created as a result of the autoconf and
# configure invocations.
#
# 	Autoconf Files and Directories:
#
# 		- configure
# 		- autom4te.cache
#
# 	Configure-created files and directories:
#
#		- config.log
# 		- config.status
# 		- Makefile
#
.PHONY: distclean
distclean: clean
	$(RM) configure config.log config.status Makefile
	$(RMDIR) autom4te.cache
